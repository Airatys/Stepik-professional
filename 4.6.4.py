# По каналу связи передается pickle файл, содержащий сериализованный словарь или список, и целое число — контрольная сумма, которая вычисляется по следующему правилу:
#     для словаря — сумма всех целочисленных ключей (тип int)
#     для списка — произведение минимального и максимального целочисленных элементов (тип int)
# Напишите программу, которая вычисляет контрольную сумму для объекта, содержащегося в pickle файле, и сравнивает ее с данным целым числом.
# Формат входных данных
# На вход программе в первой строке подается название pickle файла, в котором содержится сериализованный словарь или список, в следующей — целое число.
# Формат выходных данных
# Программа должна вычислить контрольную сумму для объекта, который содержится в данном pickle файле, и
#     если она совпадает с введенным числом, вывести текст:
#     Контрольные суммы совпадают
#     если она не совпадает с введенным числом, вывести текст:
#     Контрольные суммы не совпадают
# Примечание 1. Если список (словарь) не содержит целочисленных элементов (ключей), то считайте, что контрольная сумма равна 00.
# Примечание 2. Рассмотрим первый тест. Подается название файла — data.pkl, в котором содержится сериализованный список:
# ['a', 'b', 3, 4, 'f', 'g', 7, 8]
# затем число — 30233023. Контрольная сумма для данного списка равна 3⋅8=243⋅8=24. Так как 3023≠243023=24, программа выводит:
# Контрольные суммы не совпадают

import pickle

with open(input(), 'rb') as file:
    info = pickle.load(file)
    cont = int(input())
    if isinstance(info, dict):
        d = sum(list(filter(lambda x: isinstance(x, int),info)))
        if cont == d:
            print('Контрольные суммы совпадают') 
        else:
            print('Контрольные суммы не совпадают')
        
    else:
        a = min(list(filter(lambda x: isinstance(x, int), info)), default=0)
        b = max(list(filter(lambda x: isinstance(x, int), info)), default=0)
        if cont == a * b:
            print('Контрольные суммы совпадают')
        else:
            print('Контрольные суммы не совпадают')