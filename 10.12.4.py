# Вам доступен список items, содержащий набор предметов. Каждый предмет представлен в виде именованного кортежа и имеет три параметра — название, массу (в граммах) и ценность (в рублях). Также имеется рюкзак определённой грузоподъёмности.
# Напишите программу, которая определяет, какие предметы из представленного набора следует взять, чтобы собрать рюкзак с максимальной ценностью предметов внутри, соблюдая при этом весовое ограничение рюкзака.
# Формат входных данных
# На вход программе в первой строке подается число — грузоподъемность рюкзака (в граммах).
# Формат выходных данных
# Программа должна определить какие предметы из представленного набора следует взять, чтобы собрать рюкзак с максимальной ценностью предметов внутри, соблюдая при этом весовое ограничение рюкзака, и вывести названия полученных предметов в лексикографическом порядке, каждое на отдельной строке.
# Если рюкзак не позволяет взять ни один предмет, программа должна вывести текст:
# Рюкзак собрать не удастся
# Примечание 1. Рюкзак не обязательно должен быть наполнен полностью.

from collections import namedtuple
import itertools as it

Item = namedtuple('Item', ['name', 'mass', 'price'])

items = [Item('Обручальное кольцо', 7, 49_000),
         Item('Мобильный телефон', 200, 110_000),
         Item('Ноутбук', 2000, 150_000),
         Item('Ручка Паркер', 20, 37_000),
         Item('Статуэтка Оскар', 4000, 28_000),
         Item('Наушники', 150, 11_000),
         Item('Гитара', 1500, 32_000),
         Item('Золотая монета', 8, 140_000),
         Item('Фотоаппарат', 720, 79_000),
         Item('Лимитированные кроссовки', 300, 80_000)]

mylist = []
m = int(input())
items_filter = list(filter(lambda x: x.mass <= m, items))
for i in range(len(items_filter)+1):
    for j in it.combinations(items_filter, r=i):
        if sum(map(lambda x: x.mass, j)) <= m:
            mylist.append((j))
if mylist == []:
    print('Рюкзак собрать не удастся')
else:
    s = sorted(max(mylist, key=lambda x: sum(i.price for i in x)))
    print(*map(lambda x: x.name, s), sep='\n')
        