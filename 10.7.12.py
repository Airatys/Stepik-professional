# Реализуйте генераторную функцию, которая принимает один аргумент:
#     iterable — итерируемый объект
# Функция должна возвращать генератор, порождающий последовательность кортежей, каждый из которых содержит очередной элемент итерируемого объекта iterable, а также предыдущий и следующий за ним элементы:
# (<предыдущий элемент>, <очередной элемент>, <следующий элемент>)
# Для первого элемента предыдущим считается значение None, для последнего элемента следующим считается так же значение None.
# Примечание 1. Элементы итерируемого объекта в возвращаемом функцией генераторе должны располагаться в своем исходном порядке.
# Примечание 2. Гарантируется, что итерируемый объект, передаваемый в функцию, не является множеством.
# Примечание 3. В тестирующую систему сдайте программу, содержащую только необходимую функцию around(), но не код, вызывающий ее.

def around(iterable):
    if not iterable:
        return []
    iterator = iter(iterable)
    f1 = None
    f2 = next(iterator, None)
    while not f2 is None:
        try:
            f3 = next(iterator, None)
            yield (f1, f2, f3)
            f1 = f2
            f2 = f3
        except:
            pass
    

