# Дан список сотрудников организации, в котором указаны их фамилии, имена и даты рождения.
# Напишите программу, которая определяет самого молодого сотрудника, празднующего свой день рождения в течение ближайших семи дней от текущей даты.
# Формат входных данных
# На вход программе в первой строке подается текущая дата в формате DD.MM.YYYY, в следующей строке вводится натуральное число nn — количество сотрудников, работающих в организации.
# В последующих nn строках вводятся данные о каждом сотруднике: имя, фамилия и дата рождения, разделённые пробелом. Дата рождения указывается в формате DD.MM.YYYY.
# Формат выходных данных
# Программа должна определить самого молодого сотрудника, празднующего свой день рождения в течение ближайших семи дней, и вывести его имя и фамилию, разделив пробелом.
# Если таких сотрудников нет, программа должна вывести текст:
# Дни рождения не планируются
# Примечание 1. Гарантируется, что у всех сотрудников даты рождения различны.
# Примечание 2. Например, для даты 01.11.2021 ближайшими семью днями являются:
# 02.11.2021, 03.11.2021, 04.11.2021, 05.11.2021, 06.11.2021, 07.11.2021, 08.11.2021

from datetime import *
mydict = {}
dat = datetime.strptime(input(),'%d.%m.%Y')
y = dat.year
n = int(input())
for i in range(n):
    name, dat1 = input().rsplit(' ', 1)
    date = datetime.strptime(dat1, '%d.%m.%Y')
    if dat < date.replace(year=y) <= (dat + timedelta(days=7)) or dat < date.replace(year=y+1) <= (dat + timedelta(days=7)):
        mydict.setdefault(date, []).append(name)
        
if len(mydict) != 0:
    print(*mydict[max(mydict)])              
else:
    print('Дни рождения не планируются')
