# Реализуйте функцию first_largest(), которая принимает два аргумента в следующем порядке:
#     iterable — итерируемый объект, элементами которого являются целые числа
#     number — произвольное число
# Функция должна возвращать индекс первого элемента итерируемого объекта iterable, который больше number. Если таких элементов нет, функция должна вернуть число −1−1.
# Примечание 1. Рассмотрим список чисел 10,2,14,7,7,18,2010,2,14,7,7,18,20 из первого теста. Первым числом, превосходящим 1111, является число 1414, которое имеет индекс 22.
# Примечание 2. Гарантируется, что итерируемый объект, передаваемый в функцию, не является множеством.
# Примечание 3. В тестирующую систему сдайте программу, содержащую только необходимую функцию first_largest(), но не код, вызывающий ее.

import itertools as it 

def first_largest(iterable, number):
    try:
        return next(it.dropwhile(lambda x: x[1] < number, enumerate(iterable)), -1)[0]
    except:
        return -1

# через compress 

from itertools import compress, count

first_largest = lambda it, n: next(compress(count(), (i>n for i in it)), -1)